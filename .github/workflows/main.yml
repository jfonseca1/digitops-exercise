name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  minikube:
    runs-on: self-hosted
    steps:
    - name: Set up Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
    - name: Fix Permissions for Minikube
      run: |
        sudo chown -R $USER $HOME/.minikube || true
        chmod -R u+wrx $HOME/.minikube || true
    - name: Install Kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh    
    - name: Start Docker Service
      run: |
        sudo systemctl start docker

    - name: Manually Pull kicbase Image
      run: |
        docker pull gcr.io/k8s-minikube/kicbase:v0.0.46 || true

    - name: Start Minikube
      run: |
        minikube start --driver=docker --force

    - name: Verify Minikube Status
      run: |
        minikube status
        kubectl get nodes

  build-and-deploy:
    needs: minikube
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Deploy to Kubernetes
      run: |
        # Delete existing pods to force update
        kubectl delete pods -l app=digitops-service -n digitops --ignore-not-found
        
        # Update the deployment with new image
        helm upgrade --install digitops-service ./digitops-app \
          --namespace digitops \
          --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          --set image.tag=${{ github.sha }} \
          --set image.pullPolicy=Always \
          --create-namespace

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/digitops-service-deployment -n digitops --timeout=180s
        echo "Current pods:"
        kubectl get pods -n digitops
